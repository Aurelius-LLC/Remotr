//HintName: TestQ3.g.cs
// This file was generated by the Remotr.SourceGen HandlerAttributeGenerator.

using System;
using System.Threading.Tasks;
using Remotr;

namespace KeyStrategiesGenerationTest;

public class TestQ3 : StatelessQueryHandler<ITestManagerGrain, double, double>
{
    public override async Task<double> Execute(double input)
    {
        return await QueryFactory.GetChild<KeyStrategiesGenerationTest.TestState>()
            .Ask<TestQuery3Type, double, double>(input)
            .Run("testKey2");
    }
}

public static class ITestManagerGrainTestQ3Extensions
{
        public static IGrainQueryBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> TestQ3(this IGrainQueryBaseBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>> builder, double input)
        {
            return builder.Ask<TestQ3, double, double>(input);
        }

        public static IGrainQueryBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> TestQ3<T>(this IGrainQueryBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, T> builder, double input)
        {
            return builder.Ask<TestQ3, double, double>(input);
        }

        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> TestQ3(this IGrainCommandBaseBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>> builder, double input)
        {
            return builder.Ask<TestQ3, double, double>(input);
        }

        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> TestQ3<T>(this IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, T> builder, double input)
        {
            return builder.Ask<TestQ3, double, double>(input);
        }

        public static IGrainQueryBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> ThenTestQ3(this IGrainQueryBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> builder)
        {
            return builder.ThenAsk<TestQ3, double>();
        }

        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> ThenTestQ3(this IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<KeyStrategiesGenerationTest.ITestManagerGrain>, double> builder)
        {
            return builder.ThenAsk<TestQ3, double>();
        }
}
