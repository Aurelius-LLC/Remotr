//HintName: TestC3.g.cs
// This file was generated by the Remotr.SourceGen HandlerAttributeGenerator.

using System;
using System.Threading.Tasks;
using Remotr;

namespace KeyStrategiesGenerationTest;

public class TestC3 : RootCommandHandler<ITestAggregate, KeyStrategiesGenerationTest.TestInputObject, double>
{
    public override async Task<double> Execute(KeyStrategiesGenerationTest.TestInputObject input)
    {
        return await CommandFactory.GetEntity<KeyStrategiesGenerationTest.TestState>()
            .Tell<TestCommand3Type, KeyStrategiesGenerationTest.TestInputObject, double>(input)
            .Run(KeyStrategiesGenerationTest.ITestAggregate.SetValue3TypeKey(input));
    }
}

public static class ITestAggregateTestC3Extensions
{
        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>, double> TestC3(this IGrainCommandBaseBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>> builder, KeyStrategiesGenerationTest.TestInputObject input)
        {
            return builder.Tell<TestC3, KeyStrategiesGenerationTest.TestInputObject, double>(input);
        }

        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>, double> TestC3<T>(this IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>, T> builder, KeyStrategiesGenerationTest.TestInputObject input)
        {
            return builder.Tell<TestC3, KeyStrategiesGenerationTest.TestInputObject, double>(input);
        }

        public static IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>, double> ThenTestC3(this IGrainCommandBuilder<KeyStrategiesGenerationTest.ITestAggregate, BaseRootCommandHandler<KeyStrategiesGenerationTest.ITestAggregate>, BaseRootQueryHandler<KeyStrategiesGenerationTest.ITestAggregate>, KeyStrategiesGenerationTest.TestInputObject> builder)
        {
            return builder.ThenTell<TestC3, double>();
        }
}
