//HintName: TestQ2.g.cs
// This file was generated by the Remotr.SourceGen HandlerAttributeGenerator.

using System;
using System.Threading.Tasks;
using Remotr;

namespace SimpleCommandsAndQueriesTest;

public class TestQ2 : StatelessQueryHandler<ITestAggregate, double>
{
    public override async Task<double> Execute()
    {
        return await QueryFactory.GetEntity<SimpleCommandsAndQueriesTest.TestState>()
            .Ask<TestQuery2Type, double>()
            .Run(GetPrimaryKeyString());
    }
}

public static class ITestAggregateTestQ2Extensions
{
        public static IGrainQueryBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, double> TestQ2(this IGrainQueryBaseBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>> builder)
        {
            return builder.Ask<TestQ2, double>();
        }

        public static IGrainQueryBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, double> TestQ2<T>(this IGrainQueryBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, T> builder)
        {
            return builder.Ask<TestQ2, double>();
        }

        public static IGrainCommandBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessCommandHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, double> TestQ2(this IGrainCommandBaseBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessCommandHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>> builder)
        {
            return builder.Ask<TestQ2, double>();
        }

        public static IGrainCommandBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessCommandHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, double> TestQ2<T>(this IGrainCommandBuilder<SimpleCommandsAndQueriesTest.ITestAggregate, BaseStatelessCommandHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, BaseStatelessQueryHandler<SimpleCommandsAndQueriesTest.ITestAggregate>, T> builder)
        {
            return builder.Ask<TestQ2, double>();
        }
}
