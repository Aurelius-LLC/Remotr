//HintName: TestQ3.g.cs
// This file was generated by the Remotr.SourceGen HandlerAttributeGenerator.

using System;
using System.Threading.Tasks;
using Remotr;

namespace GenericsGenerationTest;

public class TestQ3 : StatelessQueryHandler<ITestManagerGrain, int, double>
{
    public override async Task<double> Execute(int input)
    {
        return await QueryFactory.GetChild<GenericsGenerationTest.TestState>()
            .Ask<TestQuery3Type<GenericsGenerationTest.TestState, int, double>, int, double>(input)
            .Run(GetPrimaryKeyString());
    }
}

public static class ITestManagerGrainTestQ3Extensions
{
        public static IGrainQueryBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> TestQ3(this IGrainQueryBaseBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>> builder, int input)
        {
            return builder.Ask<TestQ3, int, double>(input);
        }

        public static IGrainQueryBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> TestQ3<T>(this IGrainQueryBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, T> builder, int input)
        {
            return builder.Ask<TestQ3, int, double>(input);
        }

        public static IGrainCommandBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> TestQ3(this IGrainCommandBaseBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>> builder, int input)
        {
            return builder.Ask<TestQ3, int, double>(input);
        }

        public static IGrainCommandBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> TestQ3<T>(this IGrainCommandBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, T> builder, int input)
        {
            return builder.Ask<TestQ3, int, double>(input);
        }

        public static IGrainQueryBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> ThenTestQ3(this IGrainQueryBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, int> builder)
        {
            return builder.ThenAsk<TestQ3, double>();
        }

        public static IGrainCommandBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, double> ThenTestQ3(this IGrainCommandBuilder<GenericsGenerationTest.ITestManagerGrain, BaseStatelessCommandHandler<GenericsGenerationTest.ITestManagerGrain>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestManagerGrain>, int> builder)
        {
            return builder.ThenAsk<TestQ3, double>();
        }
}
