//HintName: TestQ2.g.cs
// This file was generated by the Remotr.SourceGen HandlerAttributeGenerator.

using System;
using System.Threading.Tasks;
using Remotr;

namespace GenericsGenerationTest;

public class TestQ2 : StatelessQueryHandler<ITestAggregate, GenericsGenerationTest.TestState>
{
    public override async Task<GenericsGenerationTest.TestState> Execute()
    {
        return await QueryFactory.GetEntity<GenericsGenerationTest.TestState>()
            .Ask<TestQuery2Type<GenericsGenerationTest.TestState, GenericsGenerationTest.TestState>, GenericsGenerationTest.TestState>()
            .Run(GetPrimaryKeyString());
    }
}

public static class ITestAggregateTestQ2Extensions
{
        public static IGrainQueryBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, GenericsGenerationTest.TestState> TestQ2(this IGrainQueryBaseBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>> builder)
        {
            return builder.Ask<TestQ2, GenericsGenerationTest.TestState>();
        }

        public static IGrainQueryBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, GenericsGenerationTest.TestState> TestQ2<T>(this IGrainQueryBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, T> builder)
        {
            return builder.Ask<TestQ2, GenericsGenerationTest.TestState>();
        }

        public static IGrainCommandBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessCommandHandler<GenericsGenerationTest.ITestAggregate>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, GenericsGenerationTest.TestState> TestQ2(this IGrainCommandBaseBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessCommandHandler<GenericsGenerationTest.ITestAggregate>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>> builder)
        {
            return builder.Ask<TestQ2, GenericsGenerationTest.TestState>();
        }

        public static IGrainCommandBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessCommandHandler<GenericsGenerationTest.ITestAggregate>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, GenericsGenerationTest.TestState> TestQ2<T>(this IGrainCommandBuilder<GenericsGenerationTest.ITestAggregate, BaseStatelessCommandHandler<GenericsGenerationTest.ITestAggregate>, BaseStatelessQueryHandler<GenericsGenerationTest.ITestAggregate>, T> builder)
        {
            return builder.Ask<TestQ2, GenericsGenerationTest.TestState>();
        }
}
